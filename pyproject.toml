[project]
name = "emoji-smith"
version = "0.1.0"
description = "AI-powered custom emoji generator for Slack"
authors = [
    {name = "William Lane", email = "willtech3@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
dependencies = [
    "slack-bolt>=1.18.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "python-dotenv>=1.0.0",
    "boto3>=1.34.0",
    "aioboto3>=13.0.0",
    "httpx>=0.25.0",
    "pillow>=10.0.0",
    "pydantic>=2.5.0",
    "openai>=1.0.0",
    "mangum>=0.17.0",
    "aiohttp>=3.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.8.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "types-requests>=2.31.0",
    "types-boto3>=1.0.0",
    "respx>=0.20.2",
    "moto[sqs,secretsmanager]>=5.0.0",  # v5.0+ required for proper SQS message attributes
    "aws-cdk-lib>=2.0.0",  # Required for CDK stack tests
    "constructs>=10.0.0",  # Required for CDK stack tests
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/emojismith"]

[tool.ruff]
line-length = 88
target-version = "py312"
exclude = [
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "build",
    "dist",
    "__pycache__",
    "stubs",  # exclude vendored stubs from lint
]

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "I",     # isort
    "UP",    # pyupgrade
    "N",     # pep8-naming
    "S",     # flake8-bandit (security)
    "PT",    # flake8-pytest-style
    "SIM",   # flake8-simplify
    "RUF",   # Ruff-specific rules
]
ignore = [
    "E203",  # Whitespace before ':' (conflicts with black)
    "PT011", # pytest.raises() without match parameter (was in .flake8)
    "S101",  # Use of assert detected (B101 in bandit - needed for pytest)
    "S104",  # Possible binding to all interfaces (B104 in bandit - for dev server)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S105", "S106", "S603", "S607"]  # Allow assert, hardcoded passwords, subprocess in tests
"src/emojismith/dev_server.py" = ["S104"]  # Allow bind to all interfaces in dev server

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = true
mark-parentheses = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
mypy_path = "src"
explicit_package_bases = true
namespace_packages = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--verbose --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "timeout: marks tests with timeout limits",
    "benchmark: marks tests as performance benchmarks",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "src/emojismith/dev_server.py",
    "src/emojismith/infrastructure/aws/webhook_handler.py",  # FastAPI wiring
]

[tool.coverage.report]
fail_under = 0
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]


[dependency-groups]
dev = [
    "moto[sqs]>=5.1.6",
    "aws-cdk-lib>=2.0.0",
    "constructs>=10.0.0",
]
webhook = [
    "boto3>=1.37.3",
    "fastapi>=0.115.12",
    "mangum>=0.19.0",
    "slack-sdk>=3.35.0",
]
