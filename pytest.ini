[pytest]
# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers for different categories
markers =
    unit: Fast, isolated unit tests with no external dependencies
    integration: Tests that interact with external services (even mocked)
    contract: Tests that validate API contracts and message formats
    performance: Performance, load, and concurrency tests
    security: Security-focused tests (authentication, validation, etc.)
    e2e: End-to-end tests that test complete workflows
    slow: Tests that take longer than 1 second to run

# Test paths
testpaths = tests

# Output options
addopts =
    -v
    --strict-markers
    --tb=short

# Asyncio configuration
asyncio_mode = auto

# Coverage settings
[coverage:run]
source = src
omit =
    */tests/*
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    @abstractmethod
